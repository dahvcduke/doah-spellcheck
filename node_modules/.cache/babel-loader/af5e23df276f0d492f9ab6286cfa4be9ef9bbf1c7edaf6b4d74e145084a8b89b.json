{"ast":null,"code":"var _jsxFileName = \"/Users/bonnie/Desktop/doah-spellcheck/src/pages/Edit/EditErrorPage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Group errors by sentence\nconst groupedSentences = errorList.reduce((acc, error, idx) => {\n  const key = error.originalSentence;\n  if (!acc[key]) acc[key] = [];\n  acc[key].push({\n    ...error,\n    globalIndex: idx\n  });\n  return acc;\n}, {});\nconst sentenceKeys = Object.keys(groupedSentences);\nconst currentSentence = errorList[errorIndex].originalSentence;\nconst currentSentenceIdx = sentenceKeys.indexOf(currentSentence);\nconst getSentenceWithMultipleHighlights = (sentence, index) => {\n  const errorsInSentence = groupedSentences[sentence];\n  let result = \"\";\n  let cursor = 0;\n  const sortedErrors = errorsInSentence.map(error => ({\n    ...error,\n    replacement: error.globalIndex < errorIndex ? error.correctedWord || error.incorrectWord : error.incorrectWord,\n    color: error.globalIndex < errorIndex ? \"green\" : error.globalIndex === errorIndex ? \"red\" : \"orange\"\n  })).sort((a, b) => a.start - b.start);\n  sortedErrors.forEach(({\n    start,\n    end,\n    replacement,\n    color\n  }) => {\n    result += sentence.slice(cursor, start);\n    result += `<span style=\"font-weight:bold; color:${color}\">${replacement}</span>`;\n    cursor = end;\n  });\n  result += sentence.slice(cursor);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: \"24px\",\n      lineHeight: \"1.6\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: result\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\nconst getVisibleContext = () => {\n  const context = [];\n  const contextSentences = sentenceKeys.slice(Math.max(currentSentenceIdx - 1, 0), currentSentenceIdx + 2);\n  contextSentences.forEach((sentence, idx) => {\n    context.push(getSentenceWithMultipleHighlights(sentence, idx));\n  });\n  return context;\n};","map":{"version":3,"names":["groupedSentences","errorList","reduce","acc","error","idx","key","originalSentence","push","globalIndex","sentenceKeys","Object","keys","currentSentence","errorIndex","currentSentenceIdx","indexOf","getSentenceWithMultipleHighlights","sentence","index","errorsInSentence","result","cursor","sortedErrors","map","replacement","correctedWord","incorrectWord","color","sort","a","b","start","forEach","end","slice","_jsxDEV","style","fontSize","lineHeight","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","getVisibleContext","context","contextSentences","Math","max"],"sources":["/Users/bonnie/Desktop/doah-spellcheck/src/pages/Edit/EditErrorPage.js"],"sourcesContent":["// Group errors by sentence\nconst groupedSentences = errorList.reduce((acc, error, idx) => {\n  const key = error.originalSentence;\n  if (!acc[key]) acc[key] = [];\n  acc[key].push({ ...error, globalIndex: idx });\n  return acc;\n}, {});\n\nconst sentenceKeys = Object.keys(groupedSentences);\nconst currentSentence = errorList[errorIndex].originalSentence;\nconst currentSentenceIdx = sentenceKeys.indexOf(currentSentence);\n\nconst getSentenceWithMultipleHighlights = (sentence, index) => {\n  const errorsInSentence = groupedSentences[sentence];\n  let result = \"\";\n  let cursor = 0;\n\n  const sortedErrors = errorsInSentence\n    .map(error => ({\n      ...error,\n      replacement:\n        error.globalIndex < errorIndex\n          ? error.correctedWord || error.incorrectWord\n          : error.incorrectWord,\n      color:\n        error.globalIndex < errorIndex\n          ? \"green\"\n          : error.globalIndex === errorIndex\n          ? \"red\"\n          : \"orange\",\n    }))\n    .sort((a, b) => a.start - b.start);\n\n  sortedErrors.forEach(({ start, end, replacement, color }) => {\n    result += sentence.slice(cursor, start);\n    result += `<span style=\"font-weight:bold; color:${color}\">${replacement}</span>`;\n    cursor = end;\n  });\n\n  result += sentence.slice(cursor);\n\n  return (\n    <p\n      key={index}\n      style={{ fontSize: \"24px\", lineHeight: \"1.6\" }}\n      dangerouslySetInnerHTML={{ __html: result }}\n    />\n  );\n};\n\nconst getVisibleContext = () => {\n  const context = [];\n  const contextSentences = sentenceKeys.slice(\n    Math.max(currentSentenceIdx - 1, 0),\n    currentSentenceIdx + 2\n  );\n  contextSentences.forEach((sentence, idx) => {\n    context.push(getSentenceWithMultipleHighlights(sentence, idx));\n  });\n  return context;\n};\n"],"mappings":";;AAAA;AACA,MAAMA,gBAAgB,GAAGC,SAAS,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,EAAEC,GAAG,KAAK;EAC7D,MAAMC,GAAG,GAAGF,KAAK,CAACG,gBAAgB;EAClC,IAAI,CAACJ,GAAG,CAACG,GAAG,CAAC,EAAEH,GAAG,CAACG,GAAG,CAAC,GAAG,EAAE;EAC5BH,GAAG,CAACG,GAAG,CAAC,CAACE,IAAI,CAAC;IAAE,GAAGJ,KAAK;IAAEK,WAAW,EAAEJ;EAAI,CAAC,CAAC;EAC7C,OAAOF,GAAG;AACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AAEN,MAAMO,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACZ,gBAAgB,CAAC;AAClD,MAAMa,eAAe,GAAGZ,SAAS,CAACa,UAAU,CAAC,CAACP,gBAAgB;AAC9D,MAAMQ,kBAAkB,GAAGL,YAAY,CAACM,OAAO,CAACH,eAAe,CAAC;AAEhE,MAAMI,iCAAiC,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC7D,MAAMC,gBAAgB,GAAGpB,gBAAgB,CAACkB,QAAQ,CAAC;EACnD,IAAIG,MAAM,GAAG,EAAE;EACf,IAAIC,MAAM,GAAG,CAAC;EAEd,MAAMC,YAAY,GAAGH,gBAAgB,CAClCI,GAAG,CAACpB,KAAK,KAAK;IACb,GAAGA,KAAK;IACRqB,WAAW,EACTrB,KAAK,CAACK,WAAW,GAAGK,UAAU,GAC1BV,KAAK,CAACsB,aAAa,IAAItB,KAAK,CAACuB,aAAa,GAC1CvB,KAAK,CAACuB,aAAa;IACzBC,KAAK,EACHxB,KAAK,CAACK,WAAW,GAAGK,UAAU,GAC1B,OAAO,GACPV,KAAK,CAACK,WAAW,KAAKK,UAAU,GAChC,KAAK,GACL;EACR,CAAC,CAAC,CAAC,CACFe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;EAEpCT,YAAY,CAACU,OAAO,CAAC,CAAC;IAAED,KAAK;IAAEE,GAAG;IAAET,WAAW;IAAEG;EAAM,CAAC,KAAK;IAC3DP,MAAM,IAAIH,QAAQ,CAACiB,KAAK,CAACb,MAAM,EAAEU,KAAK,CAAC;IACvCX,MAAM,IAAI,wCAAwCO,KAAK,KAAKH,WAAW,SAAS;IAChFH,MAAM,GAAGY,GAAG;EACd,CAAC,CAAC;EAEFb,MAAM,IAAIH,QAAQ,CAACiB,KAAK,CAACb,MAAM,CAAC;EAEhC,oBACEc,OAAA;IAEEC,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAM,CAAE;IAC/CC,uBAAuB,EAAE;MAAEC,MAAM,EAAEpB;IAAO;EAAE,GAFvCF,KAAK;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGX,CAAC;AAEN,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,gBAAgB,GAAGtC,YAAY,CAACyB,KAAK,CACzCc,IAAI,CAACC,GAAG,CAACnC,kBAAkB,GAAG,CAAC,EAAE,CAAC,CAAC,EACnCA,kBAAkB,GAAG,CACvB,CAAC;EACDiC,gBAAgB,CAACf,OAAO,CAAC,CAACf,QAAQ,EAAEb,GAAG,KAAK;IAC1C0C,OAAO,CAACvC,IAAI,CAACS,iCAAiC,CAACC,QAAQ,EAAEb,GAAG,CAAC,CAAC;EAChE,CAAC,CAAC;EACF,OAAO0C,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}